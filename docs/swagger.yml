swagger: '2.0'
info:
  title: KYVE Chain - REST API
  description: REST interface for query and transaction services
  version: 1.0.0
paths:
  /kyve/bundles/v1beta1/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: BundlesParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  upload_timeout:
                    type: string
                    format: uint64
                    description: upload_timeout ...
                  storage_cost:
                    type: string
                    description: storage_cost ...
                  network_fee:
                    type: string
                    description: network_fee ...
                  max_points:
                    type: string
                    format: uint64
                    description: max_points ...
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - QueryBundles
  /kyve/delegation/v1beta1/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: DelegationParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  unbonding_delegation_time:
                    type: string
                    format: uint64
                    description: unbonding_delegation_time ...
                  redelegation_cooldown:
                    type: string
                    format: uint64
                    description: unbonding_delegation_time ...
                  redelegation_max_amount:
                    type: string
                    format: uint64
                    description: unbonding_delegation_time ...
                  vote_slash:
                    type: string
                    description: vote_slash ...
                  upload_slash:
                    type: string
                    description: upload_slash ...
                  timeout_slash:
                    type: string
                    description: timeout_slash ...
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - QueryDelegation
  /kyve/global/v1beta1/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: GlobalParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  min_gas_price:
                    type: string
                    description: >-
                      min_gas_price defines the minimum gas price value for all
                      transactions.
                  burn_ratio:
                    type: string
                    description: burn_ratio defines the ratio of transaction fees burnt.
                  gas_adjustments:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          title: type of the sdk-message
                        amount:
                          type: string
                          format: uint64
                          title: amount of gas which is added to the message
                      title: >-
                        GasAdjustment stores for every message type a fixed
                        amount

                        of gas which is added to the message
                    description: >-
                      gas_adjustments can add a constant amount of gas to a
                      specific message type.

                      This gives more control to make certain messages more
                      expensive to avoid spamming

                      of certain types of messages.
                  gas_refunds:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          title: type of the sdk-message
                        fraction:
                          type: string
                          title: fraction in decimal representation between 0 and 1
                      description: >-
                        GasRefund stores the fraction of gas which will be
                        refunded for a given

                        type of message.

                        This only works if the transaction only includes one
                        message.
                    description: >-
                      gas_refunds lets the governance specify a fraction of how
                      much gas

                      a user gets refunded for a certain type of transaction.

                      This could be used to make transactions which support to
                      network cheaper.

                      Gas refunds only work if the transaction only included one
                      message.
                  min_initial_deposit_ratio:
                    type: string
                    description: >-
                      min_initial_deposit_ratio sets a minimum fraction of
                      initial deposit for a

                      governance proposal. This is used to avoid spamming of
                      proposals and

                      polluting the proposals page.
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - QueryGlobal
  /kyve/query/v1beta1/account_assets/{address}:
    get:
      summary: >-
        AccountAssets returns an overview of the sum of all balances for a given
        user. e.g. balance, staking, funding, etc.
      operationId: AccountAssets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance:
                type: string
                format: uint64
                description: balance ...
              protocol_self_delegation:
                type: string
                format: uint64
                description: protocol_staking ...
              protocol_self_delegation_unbonding:
                type: string
                format: uint64
                title: protocol_staking_unbonding
              protocol_delegation:
                type: string
                format: uint64
                description: protocol_delegation ...
              protocol_delegation_unbonding:
                type: string
                format: uint64
                title: protocol_delegation_unbonding
              protocol_rewards:
                type: string
                format: uint64
                description: protocol_rewards ...
              protocol_funding:
                type: string
                format: uint64
                description: protocol_funding ...
            description: >-
              QueryAccountAssetsResponse is the response type for the
              Query/AccountAssets RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address ...
          in: path
          required: true
          type: string
      tags:
        - QueryAccount
  /kyve/query/v1beta1/account_delegation_unbondings/{address}:
    get:
      summary: AccountDelegationUnbondings ...
      operationId: AccountDelegationUnbondings
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              unbondings:
                type: array
                items:
                  type: object
                  properties:
                    amount:
                      type: string
                      format: uint64
                      title: amount
                    creation_time:
                      type: string
                      format: uint64
                      title: creation_time
                    staker:
                      title: staker
                      type: object
                      properties:
                        address:
                          type: string
                          title: address of the staker
                        metadata:
                          description: metadata as logo, moniker, etc.
                          type: object
                          properties:
                            commission:
                              type: string
                              title: >-
                                commission is the percentage of the rewards that
                                will

                                get transferred to the staker before the
                                remaining

                                rewards are split across all delegators
                            moniker:
                              type: string
                              title: |-
                                moniker is a human-readable name for displaying
                                the staker in the UI
                            website:
                              type: string
                              title: >-
                                website is a https-link to the website of the
                                staker
                            identity:
                              type: string
                              title: identity from keybase.io
                            security_contact:
                              type: string
                              description: security_contact ...
                            details:
                              type: string
                              description: details ...
                            pending_commission_change:
                              description: >-
                                pending_commission_change shows if the staker
                                plans

                                to change its commission. Delegators will see a
                                warning in

                                the UI. A Commission change takes some time
                                until

                                the commission is applied. Users have time to
                                redelegate

                                if they not agree with the new commission.
                              type: object
                              properties:
                                commission:
                                  type: string
                                  title: |-
                                    commission is the new commission that will
                                    become active once the change-time is over
                                creation_date:
                                  type: string
                                  format: int64
                                  description: >-
                                    creation_date is the UNIX-timestamp (in
                                    seconds)

                                    of when the entry was created.
                              title: >-
                                CommissionChangeEntry shows when the old
                                commission

                                of a staker will change to the new commission
                          title: >-
                            StakerMetadata contains static information for a
                            staker
                        self_delegation:
                          type: string
                          format: uint64
                          title: amount the staker has delegated to himself
                        self_delegation_unbonding:
                          type: string
                          format: uint64
                          description: >-
                            unbonding_amount is the amount the staker is
                            currently unbonding

                            from the self-delegation.

                            This amount can be larger than `amount` when the
                            staker

                            got slashed during unbonding. However, at the end of

                            the unbonding period this amount is double checked
                            with the

                            remaining amount.
                        total_delegation:
                          type: string
                          format: uint64
                          title: |-
                            total_delegation returns the sum of all $KYVE users
                            have delegated to this staker
                        delegator_count:
                          type: string
                          format: uint64
                          description: |-
                            delegator_count is the total number of individual
                            delegator addresses for that user.
                        pools:
                          type: array
                          items:
                            type: object
                            properties:
                              pool:
                                title: >-
                                  pool contains useful information about the
                                  pool
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uint64
                                    title: id is the ID of the pool
                                  name:
                                    type: string
                                    title: name of the pool
                                  runtime:
                                    type: string
                                    description: |-
                                      runtime for the protocol nodes
                                      like evm, bitcoin, etc.
                                  logo:
                                    type: string
                                    title: logo of the pool
                                  operating_cost:
                                    type: string
                                    format: uint64
                                    title: >-
                                      operating_cost is the base payout for each
                                      bundle reward
                                  upload_interval:
                                    type: string
                                    format: uint64
                                    title: >-
                                      upload_interval is the interval bundles
                                      get created
                                  total_funds:
                                    type: string
                                    format: uint64
                                    title: >-
                                      total_funds of the pool. If the pool runs

                                      out of funds no more bundles will be
                                      produced
                                  total_delegation:
                                    type: string
                                    format: uint64
                                    title: total_delegation of the pool
                                  status:
                                    description: |-
                                      status of the pool if pool is able
                                      to produce bundles, etc.
                                    type: string
                                    enum:
                                      - POOL_STATUS_UNSPECIFIED
                                      - POOL_STATUS_ACTIVE
                                      - POOL_STATUS_DISABLED
                                      - POOL_STATUS_NO_FUNDS
                                      - POOL_STATUS_NOT_ENOUGH_DELEGATION
                                      - POOL_STATUS_UPGRADING
                                    default: POOL_STATUS_UNSPECIFIED
                              points:
                                type: string
                                format: uint64
                                description: |-
                                  points indicates if the staker is inactive
                                  If the staker misses a vote, a point is added.
                                  After 5 points the staker is removed from
                                  the stakers set.
                              is_leaving:
                                type: boolean
                                title: >-
                                  is_leaving indicates if a user has scheduled a

                                  a PoolLeave entry. After the leave-time is
                                  over

                                  the staker will no longer participate in that
                                  pool
                              valaddress:
                                type: string
                                description: >-
                                  Valaddress is the address which is authorized
                                  to vote

                                  and submit bundles. If the server gets
                                  compromised

                                  the staker can just change the valaddress.
                              balance:
                                type: string
                                format: uint64
                                title: >-
                                  balance is the valaddress account balance and
                                  indicates

                                  whether or not the valaccount needs additional
                                  funds to

                                  pay for gas fees
                            title: |-
                              PoolMembership shows in which pool the staker
                              is participating
                          description: |-
                            pools is a list of all pools the staker is currently
                            participating, i.e. allowed to vote and upload data.
                  description: >-
                    QueryAccountAssetsResponse is the response type for the
                    Query/AccountAssets RPC method.
                description: balance ...
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAccountAssetsResponse is the response type for the
              Query/AccountAssets RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address ...
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - QueryAccount
  /kyve/query/v1beta1/account_funded_list/{address}:
    get:
      summary: AccountFundedList returns all pools the given user has funded into.
      operationId: AccountFundedList
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              funded:
                type: array
                items:
                  type: object
                  properties:
                    amount:
                      type: string
                      format: uint64
                      description: amount ...
                    pool:
                      description: pool ...
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                          title: id is the ID of the pool
                        name:
                          type: string
                          title: name of the pool
                        runtime:
                          type: string
                          description: |-
                            runtime for the protocol nodes
                            like evm, bitcoin, etc.
                        logo:
                          type: string
                          title: logo of the pool
                        operating_cost:
                          type: string
                          format: uint64
                          title: >-
                            operating_cost is the base payout for each bundle
                            reward
                        upload_interval:
                          type: string
                          format: uint64
                          title: upload_interval is the interval bundles get created
                        total_funds:
                          type: string
                          format: uint64
                          title: |-
                            total_funds of the pool. If the pool runs
                            out of funds no more bundles will be produced
                        total_delegation:
                          type: string
                          format: uint64
                          title: total_delegation of the pool
                        status:
                          description: |-
                            status of the pool if pool is able
                            to produce bundles, etc.
                          type: string
                          enum:
                            - POOL_STATUS_UNSPECIFIED
                            - POOL_STATUS_ACTIVE
                            - POOL_STATUS_DISABLED
                            - POOL_STATUS_NO_FUNDS
                            - POOL_STATUS_NOT_ENOUGH_DELEGATION
                            - POOL_STATUS_UPGRADING
                          default: POOL_STATUS_UNSPECIFIED
                      title: >-
                        BasicPool contains the necessary properties need for a
                        pool

                        to be displayed in the UI
                  description: Funded ...
                description: funded ...
            description: >-
              QueryAccountFundedListResponse is the response type for the
              Query/AccountFundedList RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address ...
          in: path
          required: true
          type: string
      tags:
        - QueryAccount
  /kyve/query/v1beta1/account_redelegation/{address}:
    get:
      summary: AccountRedelegation ...
      operationId: AccountRedelegation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              redelegation_cooldown_entries:
                type: array
                items:
                  type: object
                  properties:
                    creation_date:
                      type: string
                      format: uint64
                      description: creation_date ...
                    finish_date:
                      type: string
                      format: uint64
                      description: finish_date ...
                  description: RedelegationEntry ...
                description: redelegation_cooldown_entries ...
              available_slots:
                type: string
                format: uint64
                description: availableSlots ...
            description: >-
              QueryAccountDelegationListRequest is the response type for the
              Query/AccountDelegationList RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address ...
          in: path
          required: true
          type: string
      tags:
        - QueryAccount
  /kyve/query/v1beta1/can_propose/{pool_id}/{staker}/{proposer}/{from_index}:
    get:
      summary: CanPropose ...
      operationId: CanPropose
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              possible:
                type: boolean
                description: possible ...
              reason:
                type: string
                description: reason ...
            description: >-
              QueryCanProposeResponse is the response type for the
              Query/CanPropose RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pool_id
          description: pool_id defines the unique ID of the pool.
          in: path
          required: true
          type: string
          format: uint64
        - name: staker
          description: staker ...
          in: path
          required: true
          type: string
        - name: proposer
          description: proposer ...
          in: path
          required: true
          type: string
        - name: from_index
          description: from_index ...
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - QueryBundles
  /kyve/query/v1beta1/can_validate/{pool_id}/{valaddress}:
    get:
      summary: CanValidate ...
      operationId: CanValidate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              possible:
                type: boolean
                description: possible ...
              reason:
                type: string
                description: reason ...
            description: >-
              QueryCanProposeResponse is the response type for the
              Query/CanPropose RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pool_id
          description: pool_id defines the unique ID of the pool.
          in: path
          required: true
          type: string
          format: uint64
        - name: valaddress
          description: valaddress ...
          in: path
          required: true
          type: string
      tags:
        - QueryBundles
  /kyve/query/v1beta1/can_vote/{pool_id}/{staker}/{voter}/{storage_id}:
    get:
      summary: CanVote checks if voter on pool can still vote for the given bundle
      operationId: CanVote
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              possible:
                type: boolean
                description: possible ...
              reason:
                type: string
                description: reason ...
            description: >-
              QueryCanVoteResponse is the response type for the Query/CanVote
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pool_id
          description: pool_id defines the unique ID of the pool.
          in: path
          required: true
          type: string
          format: uint64
        - name: staker
          description: staker ...
          in: path
          required: true
          type: string
        - name: voter
          description: voter ...
          in: path
          required: true
          type: string
        - name: storage_id
          description: storage_id ...
          in: path
          required: true
          type: string
      tags:
        - QueryBundles
  /kyve/query/v1beta1/current_vote_status/{pool_id}:
    get:
      summary: CurrentVoteStatus ...
      operationId: CurrentVoteStatus
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              valid:
                type: string
                format: uint64
                description: valid ...
              invalid:
                type: string
                format: uint64
                description: invalid ...
              abstain:
                type: string
                format: uint64
                description: abstain ...
              total:
                type: string
                format: uint64
                description: total ...
            description: >-
              QueryCurrentVoteStatusResponse is the response type for the
              Query/Staker RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pool_id
          description: pool_id ...
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - QueryBundles
  /kyve/query/v1beta1/finalized_bundle/{pool_id}/{id}:
    get:
      summary: FinalizedBundle ...
      operationId: FinalizedBundle
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              finalized_bundle:
                description: finalized_bundle ...
                type: object
                properties:
                  pool_id:
                    type: string
                    format: uint64
                    title: >-
                      pool_id is the id of the pool for which this proposal is
                      for
                  id:
                    type: string
                    format: uint64
                    title: >-
                      id is a unique identifier for each finalized bundle in a
                      pool
                  storage_id:
                    type: string
                    title: >-
                      storage_id is the id with which the data can be retrieved
                      from
                  uploader:
                    type: string
                    title: >-
                      uploader is the address of the staker who submitted this
                      bundle
                  from_index:
                    type: string
                    format: uint64
                    title: >-
                      from_index is the index from where the bundle starts
                      (inclusive)
                  to_index:
                    type: string
                    format: uint64
                    title: to_index is the index to which the bundle goes (exclusive)
                  to_key:
                    type: string
                    title: >-
                      to_key the key of the last data item in the bundle
                      proposal
                  bundle_summary:
                    type: string
                    title: bundle_summary a string summary of the current proposal
                  data_hash:
                    type: string
                    title: data_hash a sha256 hash of the raw compressed data
                  finalized_at:
                    description: >-
                      finalized_at contains details of the block that finalized
                      this bundle.
                    type: object
                    properties:
                      height:
                        type: string
                        format: uint64
                        description: height ...
                      timestamp:
                        type: string
                        format: uint64
                        description: timestamp ...
                  from_key:
                    type: string
                    title: >-
                      from_key the key of the first data item in the bundle
                      proposal
                  storage_provider_id:
                    type: integer
                    format: int64
                    title: >-
                      storage_provider_id the id of the storage provider where
                      the bundle is stored
                  compression_id:
                    type: integer
                    format: int64
                    title: >-
                      compression_id the id of the compression type with which
                      the data was compressed
                  delegation:
                    type: string
                    description: delegation ...
                title: >-
                  FinalizedBundle represents a bundle proposal where the
                  majority

                  agreed on its validity
            description: >-
              QueryFinalizedBundleResponse is the response type for the
              Query/Staker RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pool_id
          description: pool_id ...
          in: path
          required: true
          type: string
          format: uint64
        - name: id
          description: id ...
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - QueryBundles
  /kyve/query/v1beta1/finalized_bundle_by_height/{pool_id}/{height}:
    get:
      summary: Queries the bundle which contains the data given height
      operationId: FinalizedBundlesByHeight
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              finalized_bundle:
                description: finalized_bundle ...
                type: object
                properties:
                  pool_id:
                    type: string
                    format: uint64
                    title: >-
                      pool_id is the id of the pool for which this proposal is
                      for
                  id:
                    type: string
                    format: uint64
                    title: >-
                      id is a unique identifier for each finalized bundle in a
                      pool
                  storage_id:
                    type: string
                    title: >-
                      storage_id is the id with which the data can be retrieved
                      from
                  uploader:
                    type: string
                    title: >-
                      uploader is the address of the staker who submitted this
                      bundle
                  from_index:
                    type: string
                    format: uint64
                    title: >-
                      from_index is the index from where the bundle starts
                      (inclusive)
                  to_index:
                    type: string
                    format: uint64
                    title: to_index is the index to which the bundle goes (exclusive)
                  to_key:
                    type: string
                    title: >-
                      to_key the key of the last data item in the bundle
                      proposal
                  bundle_summary:
                    type: string
                    title: bundle_summary a string summary of the current proposal
                  data_hash:
                    type: string
                    title: data_hash a sha256 hash of the raw compressed data
                  finalized_at:
                    description: >-
                      finalized_at contains details of the block that finalized
                      this bundle.
                    type: object
                    properties:
                      height:
                        type: string
                        format: uint64
                        description: height ...
                      timestamp:
                        type: string
                        format: uint64
                        description: timestamp ...
                  from_key:
                    type: string
                    title: >-
                      from_key the key of the first data item in the bundle
                      proposal
                  storage_provider_id:
                    type: integer
                    format: int64
                    title: >-
                      storage_provider_id the id of the storage provider where
                      the bundle is stored
                  compression_id:
                    type: integer
                    format: int64
                    title: >-
                      compression_id the id of the compression type with which
                      the data was compressed
                  delegation:
                    type: string
                    description: delegation ...
                title: >-
                  FinalizedBundle represents a bundle proposal where the
                  majority

                  agreed on its validity
            description: >-
              QueryFinalizedBundleResponse is the response type for the
              Query/Staker RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pool_id
          description: pool_id ...
          in: path
          required: true
          type: string
          format: uint64
        - name: height
          description: id ...
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - QueryBundles
  /kyve/query/v1beta1/finalized_bundles/{pool_id}:
    get:
      summary: FinalizedBundles ...
      operationId: FinalizedBundles
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              finalized_bundles:
                type: array
                items:
                  type: object
                  properties:
                    pool_id:
                      type: string
                      format: uint64
                      title: >-
                        pool_id is the id of the pool for which this proposal is
                        for
                    id:
                      type: string
                      format: uint64
                      title: >-
                        id is a unique identifier for each finalized bundle in a
                        pool
                    storage_id:
                      type: string
                      title: >-
                        storage_id is the id with which the data can be
                        retrieved from
                    uploader:
                      type: string
                      title: >-
                        uploader is the address of the staker who submitted this
                        bundle
                    from_index:
                      type: string
                      format: uint64
                      title: >-
                        from_index is the index from where the bundle starts
                        (inclusive)
                    to_index:
                      type: string
                      format: uint64
                      title: >-
                        to_index is the index to which the bundle goes
                        (exclusive)
                    to_key:
                      type: string
                      title: >-
                        to_key the key of the last data item in the bundle
                        proposal
                    bundle_summary:
                      type: string
                      title: bundle_summary a string summary of the current proposal
                    data_hash:
                      type: string
                      title: data_hash a sha256 hash of the raw compressed data
                    finalized_at:
                      description: >-
                        finalized_at contains details of the block that
                        finalized this bundle.
                      type: object
                      properties:
                        height:
                          type: string
                          format: uint64
                          description: height ...
                        timestamp:
                          type: string
                          format: uint64
                          description: timestamp ...
                    from_key:
                      type: string
                      title: >-
                        from_key the key of the first data item in the bundle
                        proposal
                    storage_provider_id:
                      type: integer
                      format: int64
                      title: >-
                        storage_provider_id the id of the storage provider where
                        the bundle is stored
                    compression_id:
                      type: integer
                      format: int64
                      title: >-
                        compression_id the id of the compression type with which
                        the data was compressed
                    delegation:
                      type: string
                      description: delegation ...
                  title: >-
                    FinalizedBundle represents a bundle proposal where the
                    majority

                    agreed on its validity
                description: finalized_bundles ...
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryStakersByPoolResponse is the response type for the
              Query/Staker RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pool_id
          description: pool_id ...
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - QueryBundles
  /kyve/query/v1beta1/delegator/{staker}/{delegator}:
    get:
      summary: >-
        Delegator returns delegation information for a specific delegator of a
        specific staker.
      operationId: Delegator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              delegator:
                description: delegator ...
                type: object
                properties:
                  delegator:
                    type: string
                    description: delegator ...
                  current_reward:
                    type: string
                    format: uint64
                    description: current_reward ...
                  delegation_amount:
                    type: string
                    format: uint64
                    description: delegation_amount ...
                  staker:
                    type: string
                    description: staker ...
            description: >-
              QueryDelegatorResponse is the response type for the
              Query/Delegator RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: staker
          description: staker ...
          in: path
          required: true
          type: string
        - name: delegator
          description: delegator ...
          in: path
          required: true
          type: string
      tags:
        - QueryDelegation
  /kyve/query/v1beta1/delegators_by_staker/{staker}:
    get:
      summary: >-
        DelegatorsByStaker returns all delegators that have delegated to the
        given staker

        This query is paginated.
      operationId: DelegatorsByStaker
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              delegators:
                type: array
                items:
                  type: object
                  properties:
                    delegator:
                      type: string
                      description: delegator ...
                    current_reward:
                      type: string
                      format: uint64
                      description: current_reward ...
                    delegation_amount:
                      type: string
                      format: uint64
                      description: delegation_amount ...
                    staker:
                      type: string
                      description: staker ...
                  description: StakerDelegatorResponse ...
                description: delegators ...
              total_delegation:
                type: string
                format: uint64
                title: total_delegation ... (consider metadata object)
              total_delegator_count:
                type: string
                format: uint64
                description: total_delegation ...
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: QueryDelegatorsByStakerResponse ...
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: staker
          description: staker ...
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - QueryDelegation
  /kyve/query/v1beta1/stakers_by_delegator/{delegator}:
    get:
      summary: >-
        StakersByPoolAndDelegator returns all stakers the given delegator has
        delegated to.

        This query is paginated.
      operationId: StakersByDelegator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              delegator:
                type: string
                description: delegator ...
              stakers:
                type: array
                items:
                  type: object
                  properties:
                    staker:
                      description: staker ...
                      type: object
                      properties:
                        address:
                          type: string
                          title: address of the staker
                        metadata:
                          description: metadata as logo, moniker, etc.
                          type: object
                          properties:
                            commission:
                              type: string
                              title: >-
                                commission is the percentage of the rewards that
                                will

                                get transferred to the staker before the
                                remaining

                                rewards are split across all delegators
                            moniker:
                              type: string
                              title: |-
                                moniker is a human-readable name for displaying
                                the staker in the UI
                            website:
                              type: string
                              title: >-
                                website is a https-link to the website of the
                                staker
                            identity:
                              type: string
                              title: identity from keybase.io
                            security_contact:
                              type: string
                              description: security_contact ...
                            details:
                              type: string
                              description: details ...
                            pending_commission_change:
                              description: >-
                                pending_commission_change shows if the staker
                                plans

                                to change its commission. Delegators will see a
                                warning in

                                the UI. A Commission change takes some time
                                until

                                the commission is applied. Users have time to
                                redelegate

                                if they not agree with the new commission.
                              type: object
                              properties:
                                commission:
                                  type: string
                                  title: |-
                                    commission is the new commission that will
                                    become active once the change-time is over
                                creation_date:
                                  type: string
                                  format: int64
                                  description: >-
                                    creation_date is the UNIX-timestamp (in
                                    seconds)

                                    of when the entry was created.
                              title: >-
                                CommissionChangeEntry shows when the old
                                commission

                                of a staker will change to the new commission
                          title: >-
                            StakerMetadata contains static information for a
                            staker
                        self_delegation:
                          type: string
                          format: uint64
                          title: amount the staker has delegated to himself
                        self_delegation_unbonding:
                          type: string
                          format: uint64
                          description: >-
                            unbonding_amount is the amount the staker is
                            currently unbonding

                            from the self-delegation.

                            This amount can be larger than `amount` when the
                            staker

                            got slashed during unbonding. However, at the end of

                            the unbonding period this amount is double checked
                            with the

                            remaining amount.
                        total_delegation:
                          type: string
                          format: uint64
                          title: |-
                            total_delegation returns the sum of all $KYVE users
                            have delegated to this staker
                        delegator_count:
                          type: string
                          format: uint64
                          description: |-
                            delegator_count is the total number of individual
                            delegator addresses for that user.
                        pools:
                          type: array
                          items:
                            type: object
                            properties:
                              pool:
                                title: >-
                                  pool contains useful information about the
                                  pool
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uint64
                                    title: id is the ID of the pool
                                  name:
                                    type: string
                                    title: name of the pool
                                  runtime:
                                    type: string
                                    description: |-
                                      runtime for the protocol nodes
                                      like evm, bitcoin, etc.
                                  logo:
                                    type: string
                                    title: logo of the pool
                                  operating_cost:
                                    type: string
                                    format: uint64
                                    title: >-
                                      operating_cost is the base payout for each
                                      bundle reward
                                  upload_interval:
                                    type: string
                                    format: uint64
                                    title: >-
                                      upload_interval is the interval bundles
                                      get created
                                  total_funds:
                                    type: string
                                    format: uint64
                                    title: >-
                                      total_funds of the pool. If the pool runs

                                      out of funds no more bundles will be
                                      produced
                                  total_delegation:
                                    type: string
                                    format: uint64
                                    title: total_delegation of the pool
                                  status:
                                    description: |-
                                      status of the pool if pool is able
                                      to produce bundles, etc.
                                    type: string
                                    enum:
                                      - POOL_STATUS_UNSPECIFIED
                                      - POOL_STATUS_ACTIVE
                                      - POOL_STATUS_DISABLED
                                      - POOL_STATUS_NO_FUNDS
                                      - POOL_STATUS_NOT_ENOUGH_DELEGATION
                                      - POOL_STATUS_UPGRADING
                                    default: POOL_STATUS_UNSPECIFIED
                              points:
                                type: string
                                format: uint64
                                description: |-
                                  points indicates if the staker is inactive
                                  If the staker misses a vote, a point is added.
                                  After 5 points the staker is removed from
                                  the stakers set.
                              is_leaving:
                                type: boolean
                                title: >-
                                  is_leaving indicates if a user has scheduled a

                                  a PoolLeave entry. After the leave-time is
                                  over

                                  the staker will no longer participate in that
                                  pool
                              valaddress:
                                type: string
                                description: >-
                                  Valaddress is the address which is authorized
                                  to vote

                                  and submit bundles. If the server gets
                                  compromised

                                  the staker can just change the valaddress.
                              balance:
                                type: string
                                format: uint64
                                title: >-
                                  balance is the valaddress account balance and
                                  indicates

                                  whether or not the valaccount needs additional
                                  funds to

                                  pay for gas fees
                            title: |-
                              PoolMembership shows in which pool the staker
                              is participating
                          description: |-
                            pools is a list of all pools the staker is currently
                            participating, i.e. allowed to vote and upload data.
                      title: >-
                        FullStaker aggregates information from the staker and
                        its delegators

                        as well as pending queue entries into one object.

                        It contains almost all needed information for a
                        convenient usage
                    current_reward:
                      type: string
                      format: uint64
                      description: current_reward ...
                    delegation_amount:
                      type: string
                      format: uint64
                      description: delegation_amount ...
                  description: DelegationForStakerResponse ...
                description: stakers ...
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: QueryStakersByDelegatorResponse ...
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator
          description: delegator ...
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - QueryDelegation
  /kyve/query/v1beta1/params:
    get:
      summary: Pools queries for all pools.
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bundles_params:
                description: bundles_params ...
                type: object
                properties:
                  upload_timeout:
                    type: string
                    format: uint64
                    description: upload_timeout ...
                  storage_cost:
                    type: string
                    description: storage_cost ...
                  network_fee:
                    type: string
                    description: network_fee ...
                  max_points:
                    type: string
                    format: uint64
                    description: max_points ...
              delegation_params:
                description: delegation_params ...
                type: object
                properties:
                  unbonding_delegation_time:
                    type: string
                    format: uint64
                    description: unbonding_delegation_time ...
                  redelegation_cooldown:
                    type: string
                    format: uint64
                    description: unbonding_delegation_time ...
                  redelegation_max_amount:
                    type: string
                    format: uint64
                    description: unbonding_delegation_time ...
                  vote_slash:
                    type: string
                    description: vote_slash ...
                  upload_slash:
                    type: string
                    description: upload_slash ...
                  timeout_slash:
                    type: string
                    description: timeout_slash ...
              global_params:
                description: global_params ...
                type: object
                properties:
                  min_gas_price:
                    type: string
                    description: >-
                      min_gas_price defines the minimum gas price value for all
                      transactions.
                  burn_ratio:
                    type: string
                    description: burn_ratio defines the ratio of transaction fees burnt.
                  gas_adjustments:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          title: type of the sdk-message
                        amount:
                          type: string
                          format: uint64
                          title: amount of gas which is added to the message
                      title: >-
                        GasAdjustment stores for every message type a fixed
                        amount

                        of gas which is added to the message
                    description: >-
                      gas_adjustments can add a constant amount of gas to a
                      specific message type.

                      This gives more control to make certain messages more
                      expensive to avoid spamming

                      of certain types of messages.
                  gas_refunds:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          title: type of the sdk-message
                        fraction:
                          type: string
                          title: fraction in decimal representation between 0 and 1
                      description: >-
                        GasRefund stores the fraction of gas which will be
                        refunded for a given

                        type of message.

                        This only works if the transaction only includes one
                        message.
                    description: >-
                      gas_refunds lets the governance specify a fraction of how
                      much gas

                      a user gets refunded for a certain type of transaction.

                      This could be used to make transactions which support to
                      network cheaper.

                      Gas refunds only work if the transaction only included one
                      message.
                  min_initial_deposit_ratio:
                    type: string
                    description: >-
                      min_initial_deposit_ratio sets a minimum fraction of
                      initial deposit for a

                      governance proposal. This is used to avoid spamming of
                      proposals and

                      polluting the proposals page.
              gov_params:
                description: gov_params ...
                type: object
                properties:
                  voting_params:
                    description: voting_params defines the parameters related to voting.
                    type: object
                    properties:
                      voting_period:
                        type: string
                        description: Length of the voting period.
                  deposit_params:
                    description: deposit_params defines the parameters related to deposit.
                    type: object
                    properties:
                      min_deposit:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        description: Minimum deposit for a proposal to enter voting period.
                      max_deposit_period:
                        type: string
                        description: >-
                          Maximum period for Atom holders to deposit on a
                          proposal. Initial value: 2
                           months.
                  tally_params:
                    description: tally_params defines the parameters related to tally.
                    type: object
                    properties:
                      quorum:
                        type: string
                        description: >-
                          Minimum percentage of total stake needed to vote for a
                          result to be
                           considered valid.
                      threshold:
                        type: string
                        description: >-
                          Minimum proportion of Yes votes for proposal to pass.
                          Default value: 0.5.
                      veto_threshold:
                        type: string
                        description: >-
                          Minimum value of Veto votes to Total votes ratio for
                          proposal to be
                           vetoed. Default value: 1/3.
              stakers_params:
                description: stakers_params ...
                type: object
                properties:
                  commission_change_time:
                    type: string
                    format: uint64
                    description: commission_change_time ...
                  leave_pool_time:
                    type: string
                    format: uint64
                    description: commission_change_time ...
            description: QueryParamsResponse ...
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - QueryParams
  /kyve/query/v1beta1/pool/{id}:
    get:
      summary: Pool queries a pool by its Id.
      operationId: Pool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                description: pool ...
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    description: id ...
                  data:
                    description: data ...
                    type: object
                    properties:
                      id:
                        type: string
                        format: uint64
                        title: id - unique identifier of the pool, can not be changed
                      name:
                        type: string
                        title: name is a human readable name for the pool
                      runtime:
                        type: string
                        title: >-
                          runtime specified which protocol and which version
                          needs is required
                      logo:
                        type: string
                        title: logo is a link to an image file
                      config:
                        type: string
                        description: >-
                          config is either a JSON encoded string or a link to an
                          external storage provider.

                          This is up to the implementation of the protocol node.
                      start_key:
                        type: string
                        description: start_key ...
                      current_key:
                        type: string
                        description: current_key ...
                      current_summary:
                        type: string
                        description: current_summary ...
                      current_index:
                        type: string
                        format: uint64
                        description: current_index ...
                      total_bundles:
                        type: string
                        format: uint64
                        title: total_bundles is the number of total finalized bundles
                      upload_interval:
                        type: string
                        format: uint64
                        description: upload_interval ...
                      operating_cost:
                        type: string
                        format: uint64
                        description: operating_cost ...
                      min_delegation:
                        type: string
                        format: uint64
                        description: min_delegation ...
                      max_bundle_size:
                        type: string
                        format: uint64
                        description: max_bundle_size ...
                      disabled:
                        type: boolean
                        description: |-
                          disabled is true when the pool is disabled.
                          Can only be done via governance.
                      funders:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                              title: address is the address of the funder
                            amount:
                              type: string
                              format: uint64
                              title: >-
                                amount is the current amount of funds in ukyve
                                the funder has

                                still funded the pool with
                          title: >-
                            Funder is the object which holds info about a single
                            pool funder
                        description: funders ...
                      total_funds:
                        type: string
                        format: uint64
                        description: total_funds ...
                      protocol:
                        description: protocol ...
                        type: object
                        properties:
                          version:
                            type: string
                            title: >-
                              version holds the current software version tag of
                              the pool binaries
                          binaries:
                            type: string
                            title: >-
                              binaries is a stringified json object which holds
                              binaries in the

                              current version for multiple platforms and
                              architectures
                          last_upgrade:
                            type: string
                            format: uint64
                            title: >-
                              last_upgrade is the unix time the pool was
                              upgraded the last time
                        title: >-
                          Protocol holds all info about the current pool version
                          and the

                          available binaries for participating as a validator in
                          a pool
                      upgrade_plan:
                        description: upgrade_plan ...
                        type: object
                        properties:
                          version:
                            type: string
                            title: >-
                              version is the new software version tag of the
                              upgrade
                          binaries:
                            type: string
                            title: >-
                              binaries is the new stringified json object which
                              holds binaries in the

                              upgrade version for multiple platforms and
                              architectures
                          scheduled_at:
                            type: string
                            format: uint64
                            title: >-
                              scheduled_at is the unix time the upgrade is
                              supposed to be done
                          duration:
                            type: string
                            format: uint64
                            title: >-
                              duration is the time in seconds how long the pool
                              should halt

                              during the upgrade to give all validators a chance
                              of switching

                              to the new binaries
                        title: >-
                          Upgrade holds all info when a pool has a scheduled
                          upgrade
                      current_storage_provider_id:
                        type: integer
                        format: int64
                        description: storage_provider_id ...
                      current_compression_id:
                        type: integer
                        format: int64
                        description: compression_id ...
                  bundle_proposal:
                    description: bundle_proposal ...
                    type: object
                    properties:
                      pool_id:
                        type: string
                        format: uint64
                        title: >-
                          pool_id is the id of the pool for which this proposal
                          is for
                      storage_id:
                        type: string
                        title: >-
                          storage_id is the id with which the data can be
                          retrieved from
                      uploader:
                        type: string
                        title: >-
                          uploader is the address of the staker who submitted
                          the current proposal
                      next_uploader:
                        type: string
                        title: >-
                          next_uploader is the address of the staker who should
                          upload the next proposal
                      data_size:
                        type: string
                        format: uint64
                        title: data_size the size of the data in bytes
                      bundle_size:
                        type: string
                        format: uint64
                        title: >-
                          bundle_size the size of the bundle (amount of data
                          items)
                      to_key:
                        type: string
                        title: >-
                          to_key the key of the last data item in the bundle
                          proposal
                      bundle_summary:
                        type: string
                        title: >-
                          bundle_summary a string summary of the current
                          proposal
                      data_hash:
                        type: string
                        title: data_hash a sha256 hash of the raw compressed data
                      updated_at:
                        type: string
                        format: uint64
                        title: updated_at the last time this proposal was edited
                      voters_valid:
                        type: array
                        items:
                          type: string
                        title: >-
                          voters_valid list of all stakers who voted in favor
                          for current proposal
                      voters_invalid:
                        type: array
                        items:
                          type: string
                        title: >-
                          voters_invalid list of all stakers who voted against
                          for current proposal
                      voters_abstain:
                        type: array
                        items:
                          type: string
                        title: >-
                          voters_abstain list of all stakers who voted abstain
                          for current proposal
                      from_key:
                        type: string
                        title: >-
                          from_key the key of the first data item in the bundle
                          proposal
                      storage_provider_id:
                        type: integer
                        format: int64
                        title: >-
                          storage_provider_id the id of the storage provider
                          where the bundle is stored
                      compression_id:
                        type: integer
                        format: int64
                        title: >-
                          compression_id the id of the compression type with
                          which the data was compressed
                    title: |-
                      BundleProposal represents the current bundle proposal
                      of a storage pool
                  stakers:
                    type: array
                    items:
                      type: string
                    description: stakers ...
                  total_self_delegation:
                    type: string
                    format: uint64
                    description: total_stake ...
                  total_delegation:
                    type: string
                    format: uint64
                    description: total_delegation ...
                  status:
                    description: status ...
                    type: string
                    enum:
                      - POOL_STATUS_UNSPECIFIED
                      - POOL_STATUS_ACTIVE
                      - POOL_STATUS_DISABLED
                      - POOL_STATUS_NO_FUNDS
                      - POOL_STATUS_NOT_ENOUGH_DELEGATION
                      - POOL_STATUS_UPGRADING
                    default: POOL_STATUS_UNSPECIFIED
            description: >-
              QueryPoolResponse is the response type for the Query/Pool RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: id
          description: id defines the unique ID of the pool.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - QueryPool
  /kyve/query/v1beta1/pools:
    get:
      summary: Pools queries for all pools.
      operationId: Pools
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pools:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                      description: id ...
                    data:
                      description: data ...
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                          title: >-
                            id - unique identifier of the pool, can not be
                            changed
                        name:
                          type: string
                          title: name is a human readable name for the pool
                        runtime:
                          type: string
                          title: >-
                            runtime specified which protocol and which version
                            needs is required
                        logo:
                          type: string
                          title: logo is a link to an image file
                        config:
                          type: string
                          description: >-
                            config is either a JSON encoded string or a link to
                            an external storage provider.

                            This is up to the implementation of the protocol
                            node.
                        start_key:
                          type: string
                          description: start_key ...
                        current_key:
                          type: string
                          description: current_key ...
                        current_summary:
                          type: string
                          description: current_summary ...
                        current_index:
                          type: string
                          format: uint64
                          description: current_index ...
                        total_bundles:
                          type: string
                          format: uint64
                          title: >-
                            total_bundles is the number of total finalized
                            bundles
                        upload_interval:
                          type: string
                          format: uint64
                          description: upload_interval ...
                        operating_cost:
                          type: string
                          format: uint64
                          description: operating_cost ...
                        min_delegation:
                          type: string
                          format: uint64
                          description: min_delegation ...
                        max_bundle_size:
                          type: string
                          format: uint64
                          description: max_bundle_size ...
                        disabled:
                          type: boolean
                          description: |-
                            disabled is true when the pool is disabled.
                            Can only be done via governance.
                        funders:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                                title: address is the address of the funder
                              amount:
                                type: string
                                format: uint64
                                title: >-
                                  amount is the current amount of funds in ukyve
                                  the funder has

                                  still funded the pool with
                            title: >-
                              Funder is the object which holds info about a
                              single pool funder
                          description: funders ...
                        total_funds:
                          type: string
                          format: uint64
                          description: total_funds ...
                        protocol:
                          description: protocol ...
                          type: object
                          properties:
                            version:
                              type: string
                              title: >-
                                version holds the current software version tag
                                of the pool binaries
                            binaries:
                              type: string
                              title: >-
                                binaries is a stringified json object which
                                holds binaries in the

                                current version for multiple platforms and
                                architectures
                            last_upgrade:
                              type: string
                              format: uint64
                              title: >-
                                last_upgrade is the unix time the pool was
                                upgraded the last time
                          title: >-
                            Protocol holds all info about the current pool
                            version and the

                            available binaries for participating as a validator
                            in a pool
                        upgrade_plan:
                          description: upgrade_plan ...
                          type: object
                          properties:
                            version:
                              type: string
                              title: >-
                                version is the new software version tag of the
                                upgrade
                            binaries:
                              type: string
                              title: >-
                                binaries is the new stringified json object
                                which holds binaries in the

                                upgrade version for multiple platforms and
                                architectures
                            scheduled_at:
                              type: string
                              format: uint64
                              title: >-
                                scheduled_at is the unix time the upgrade is
                                supposed to be done
                            duration:
                              type: string
                              format: uint64
                              title: >-
                                duration is the time in seconds how long the
                                pool should halt

                                during the upgrade to give all validators a
                                chance of switching

                                to the new binaries
                          title: >-
                            Upgrade holds all info when a pool has a scheduled
                            upgrade
                        current_storage_provider_id:
                          type: integer
                          format: int64
                          description: storage_provider_id ...
                        current_compression_id:
                          type: integer
                          format: int64
                          description: compression_id ...
                    bundle_proposal:
                      description: bundle_proposal ...
                      type: object
                      properties:
                        pool_id:
                          type: string
                          format: uint64
                          title: >-
                            pool_id is the id of the pool for which this
                            proposal is for
                        storage_id:
                          type: string
                          title: >-
                            storage_id is the id with which the data can be
                            retrieved from
                        uploader:
                          type: string
                          title: >-
                            uploader is the address of the staker who submitted
                            the current proposal
                        next_uploader:
                          type: string
                          title: >-
                            next_uploader is the address of the staker who
                            should upload the next proposal
                        data_size:
                          type: string
                          format: uint64
                          title: data_size the size of the data in bytes
                        bundle_size:
                          type: string
                          format: uint64
                          title: >-
                            bundle_size the size of the bundle (amount of data
                            items)
                        to_key:
                          type: string
                          title: >-
                            to_key the key of the last data item in the bundle
                            proposal
                        bundle_summary:
                          type: string
                          title: >-
                            bundle_summary a string summary of the current
                            proposal
                        data_hash:
                          type: string
                          title: data_hash a sha256 hash of the raw compressed data
                        updated_at:
                          type: string
                          format: uint64
                          title: updated_at the last time this proposal was edited
                        voters_valid:
                          type: array
                          items:
                            type: string
                          title: >-
                            voters_valid list of all stakers who voted in favor
                            for current proposal
                        voters_invalid:
                          type: array
                          items:
                            type: string
                          title: >-
                            voters_invalid list of all stakers who voted against
                            for current proposal
                        voters_abstain:
                          type: array
                          items:
                            type: string
                          title: >-
                            voters_abstain list of all stakers who voted abstain
                            for current proposal
                        from_key:
                          type: string
                          title: >-
                            from_key the key of the first data item in the
                            bundle proposal
                        storage_provider_id:
                          type: integer
                          format: int64
                          title: >-
                            storage_provider_id the id of the storage provider
                            where the bundle is stored
                        compression_id:
                          type: integer
                          format: int64
                          title: >-
                            compression_id the id of the compression type with
                            which the data was compressed
                      title: |-
                        BundleProposal represents the current bundle proposal
                        of a storage pool
                    stakers:
                      type: array
                      items:
                        type: string
                      description: stakers ...
                    total_self_delegation:
                      type: string
                      format: uint64
                      description: total_stake ...
                    total_delegation:
                      type: string
                      format: uint64
                      description: total_delegation ...
                    status:
                      description: status ...
                      type: string
                      enum:
                        - POOL_STATUS_UNSPECIFIED
                        - POOL_STATUS_ACTIVE
                        - POOL_STATUS_DISABLED
                        - POOL_STATUS_NO_FUNDS
                        - POOL_STATUS_NOT_ENOUGH_DELEGATION
                        - POOL_STATUS_UPGRADING
                      default: POOL_STATUS_UNSPECIFIED
                  description: PoolResponse ...
                description: pools ...
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryPoolsResponse is the response type for the Query/Pools RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
        - name: search
          description: search ...
          in: query
          required: false
          type: string
        - name: runtime
          description: runtime ...
          in: query
          required: false
          type: string
        - name: disabled
          description: disabled ...
          in: query
          required: false
          type: boolean
        - name: storage_provider_id
          description: storage_provider_id ...
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - QueryPool
  /kyve/query/v1beta1/staker/{address}:
    get:
      summary: Staker queries for all stakers.
      operationId: Staker
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              staker:
                description: staker ...
                type: object
                properties:
                  address:
                    type: string
                    title: address of the staker
                  metadata:
                    description: metadata as logo, moniker, etc.
                    type: object
                    properties:
                      commission:
                        type: string
                        title: |-
                          commission is the percentage of the rewards that will
                          get transferred to the staker before the remaining
                          rewards are split across all delegators
                      moniker:
                        type: string
                        title: |-
                          moniker is a human-readable name for displaying
                          the staker in the UI
                      website:
                        type: string
                        title: website is a https-link to the website of the staker
                      identity:
                        type: string
                        title: identity from keybase.io
                      security_contact:
                        type: string
                        description: security_contact ...
                      details:
                        type: string
                        description: details ...
                      pending_commission_change:
                        description: >-
                          pending_commission_change shows if the staker plans

                          to change its commission. Delegators will see a
                          warning in

                          the UI. A Commission change takes some time until

                          the commission is applied. Users have time to
                          redelegate

                          if they not agree with the new commission.
                        type: object
                        properties:
                          commission:
                            type: string
                            title: |-
                              commission is the new commission that will
                              become active once the change-time is over
                          creation_date:
                            type: string
                            format: int64
                            description: |-
                              creation_date is the UNIX-timestamp (in seconds)
                              of when the entry was created.
                        title: |-
                          CommissionChangeEntry shows when the old commission
                          of a staker will change to the new commission
                    title: StakerMetadata contains static information for a staker
                  self_delegation:
                    type: string
                    format: uint64
                    title: amount the staker has delegated to himself
                  self_delegation_unbonding:
                    type: string
                    format: uint64
                    description: >-
                      unbonding_amount is the amount the staker is currently
                      unbonding

                      from the self-delegation.

                      This amount can be larger than `amount` when the staker

                      got slashed during unbonding. However, at the end of

                      the unbonding period this amount is double checked with
                      the

                      remaining amount.
                  total_delegation:
                    type: string
                    format: uint64
                    title: |-
                      total_delegation returns the sum of all $KYVE users
                      have delegated to this staker
                  delegator_count:
                    type: string
                    format: uint64
                    description: |-
                      delegator_count is the total number of individual
                      delegator addresses for that user.
                  pools:
                    type: array
                    items:
                      type: object
                      properties:
                        pool:
                          title: pool contains useful information about the pool
                          type: object
                          properties:
                            id:
                              type: string
                              format: uint64
                              title: id is the ID of the pool
                            name:
                              type: string
                              title: name of the pool
                            runtime:
                              type: string
                              description: |-
                                runtime for the protocol nodes
                                like evm, bitcoin, etc.
                            logo:
                              type: string
                              title: logo of the pool
                            operating_cost:
                              type: string
                              format: uint64
                              title: >-
                                operating_cost is the base payout for each
                                bundle reward
                            upload_interval:
                              type: string
                              format: uint64
                              title: >-
                                upload_interval is the interval bundles get
                                created
                            total_funds:
                              type: string
                              format: uint64
                              title: |-
                                total_funds of the pool. If the pool runs
                                out of funds no more bundles will be produced
                            total_delegation:
                              type: string
                              format: uint64
                              title: total_delegation of the pool
                            status:
                              description: |-
                                status of the pool if pool is able
                                to produce bundles, etc.
                              type: string
                              enum:
                                - POOL_STATUS_UNSPECIFIED
                                - POOL_STATUS_ACTIVE
                                - POOL_STATUS_DISABLED
                                - POOL_STATUS_NO_FUNDS
                                - POOL_STATUS_NOT_ENOUGH_DELEGATION
                                - POOL_STATUS_UPGRADING
                              default: POOL_STATUS_UNSPECIFIED
                        points:
                          type: string
                          format: uint64
                          description: |-
                            points indicates if the staker is inactive
                            If the staker misses a vote, a point is added.
                            After 5 points the staker is removed from
                            the stakers set.
                        is_leaving:
                          type: boolean
                          title: |-
                            is_leaving indicates if a user has scheduled a
                            a PoolLeave entry. After the leave-time is over
                            the staker will no longer participate in that pool
                        valaddress:
                          type: string
                          description: >-
                            Valaddress is the address which is authorized to
                            vote

                            and submit bundles. If the server gets compromised

                            the staker can just change the valaddress.
                        balance:
                          type: string
                          format: uint64
                          title: >-
                            balance is the valaddress account balance and
                            indicates

                            whether or not the valaccount needs additional funds
                            to

                            pay for gas fees
                      title: |-
                        PoolMembership shows in which pool the staker
                        is participating
                    description: |-
                      pools is a list of all pools the staker is currently
                      participating, i.e. allowed to vote and upload data.
                title: >-
                  FullStaker aggregates information from the staker and its
                  delegators

                  as well as pending queue entries into one object.

                  It contains almost all needed information for a convenient
                  usage
            description: >-
              QueryStakerResponse is the response type for the Query/Staker RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address ...
          in: path
          required: true
          type: string
      tags:
        - QueryStakers
  /kyve/query/v1beta1/stakers:
    get:
      summary: Stakers queries for all stakers.
      operationId: Stakers
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              stakers:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      title: address of the staker
                    metadata:
                      description: metadata as logo, moniker, etc.
                      type: object
                      properties:
                        commission:
                          type: string
                          title: >-
                            commission is the percentage of the rewards that
                            will

                            get transferred to the staker before the remaining

                            rewards are split across all delegators
                        moniker:
                          type: string
                          title: |-
                            moniker is a human-readable name for displaying
                            the staker in the UI
                        website:
                          type: string
                          title: website is a https-link to the website of the staker
                        identity:
                          type: string
                          title: identity from keybase.io
                        security_contact:
                          type: string
                          description: security_contact ...
                        details:
                          type: string
                          description: details ...
                        pending_commission_change:
                          description: >-
                            pending_commission_change shows if the staker plans

                            to change its commission. Delegators will see a
                            warning in

                            the UI. A Commission change takes some time until

                            the commission is applied. Users have time to
                            redelegate

                            if they not agree with the new commission.
                          type: object
                          properties:
                            commission:
                              type: string
                              title: |-
                                commission is the new commission that will
                                become active once the change-time is over
                            creation_date:
                              type: string
                              format: int64
                              description: |-
                                creation_date is the UNIX-timestamp (in seconds)
                                of when the entry was created.
                          title: |-
                            CommissionChangeEntry shows when the old commission
                            of a staker will change to the new commission
                      title: StakerMetadata contains static information for a staker
                    self_delegation:
                      type: string
                      format: uint64
                      title: amount the staker has delegated to himself
                    self_delegation_unbonding:
                      type: string
                      format: uint64
                      description: >-
                        unbonding_amount is the amount the staker is currently
                        unbonding

                        from the self-delegation.

                        This amount can be larger than `amount` when the staker

                        got slashed during unbonding. However, at the end of

                        the unbonding period this amount is double checked with
                        the

                        remaining amount.
                    total_delegation:
                      type: string
                      format: uint64
                      title: |-
                        total_delegation returns the sum of all $KYVE users
                        have delegated to this staker
                    delegator_count:
                      type: string
                      format: uint64
                      description: |-
                        delegator_count is the total number of individual
                        delegator addresses for that user.
                    pools:
                      type: array
                      items:
                        type: object
                        properties:
                          pool:
                            title: pool contains useful information about the pool
                            type: object
                            properties:
                              id:
                                type: string
                                format: uint64
                                title: id is the ID of the pool
                              name:
                                type: string
                                title: name of the pool
                              runtime:
                                type: string
                                description: |-
                                  runtime for the protocol nodes
                                  like evm, bitcoin, etc.
                              logo:
                                type: string
                                title: logo of the pool
                              operating_cost:
                                type: string
                                format: uint64
                                title: >-
                                  operating_cost is the base payout for each
                                  bundle reward
                              upload_interval:
                                type: string
                                format: uint64
                                title: >-
                                  upload_interval is the interval bundles get
                                  created
                              total_funds:
                                type: string
                                format: uint64
                                title: |-
                                  total_funds of the pool. If the pool runs
                                  out of funds no more bundles will be produced
                              total_delegation:
                                type: string
                                format: uint64
                                title: total_delegation of the pool
                              status:
                                description: |-
                                  status of the pool if pool is able
                                  to produce bundles, etc.
                                type: string
                                enum:
                                  - POOL_STATUS_UNSPECIFIED
                                  - POOL_STATUS_ACTIVE
                                  - POOL_STATUS_DISABLED
                                  - POOL_STATUS_NO_FUNDS
                                  - POOL_STATUS_NOT_ENOUGH_DELEGATION
                                  - POOL_STATUS_UPGRADING
                                default: POOL_STATUS_UNSPECIFIED
                          points:
                            type: string
                            format: uint64
                            description: |-
                              points indicates if the staker is inactive
                              If the staker misses a vote, a point is added.
                              After 5 points the staker is removed from
                              the stakers set.
                          is_leaving:
                            type: boolean
                            title: |-
                              is_leaving indicates if a user has scheduled a
                              a PoolLeave entry. After the leave-time is over
                              the staker will no longer participate in that pool
                          valaddress:
                            type: string
                            description: >-
                              Valaddress is the address which is authorized to
                              vote

                              and submit bundles. If the server gets compromised

                              the staker can just change the valaddress.
                          balance:
                            type: string
                            format: uint64
                            title: >-
                              balance is the valaddress account balance and
                              indicates

                              whether or not the valaccount needs additional
                              funds to

                              pay for gas fees
                        title: |-
                          PoolMembership shows in which pool the staker
                          is participating
                      description: |-
                        pools is a list of all pools the staker is currently
                        participating, i.e. allowed to vote and upload data.
                  title: >-
                    FullStaker aggregates information from the staker and its
                    delegators

                    as well as pending queue entries into one object.

                    It contains almost all needed information for a convenient
                    usage
                description: stakers ...
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryStakersResponse is the response type for the Query/Stakers
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
        - name: status
          description: |-
            status looks whether a staker is participating in pools or not.

             - STAKER_STATUS_UNSPECIFIED: STAKER_STATUS_UNSPECIFIED ...
             - STAKER_STATUS_ACTIVE: STAKER_STATUS_ACTIVE ...
             - STAKER_STATUS_INACTIVE: STAKER_STATUS_INACTIVE ...
          in: query
          required: false
          type: string
          enum:
            - STAKER_STATUS_UNSPECIFIED
            - STAKER_STATUS_ACTIVE
            - STAKER_STATUS_INACTIVE
          default: STAKER_STATUS_UNSPECIFIED
        - name: search
          description: search searches for moniker OR address.
          in: query
          required: false
          type: string
      tags:
        - QueryStakers
  /kyve/query/v1beta1/stakers_by_pool/{pool_id}:
    get:
      summary: >-
        StakersByPool queries for all stakers that are currently participating
        in the given pool
      operationId: StakersByPool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              stakers:
                type: array
                items:
                  type: object
                  properties:
                    staker:
                      type: object
                      properties:
                        address:
                          type: string
                          title: address of the staker
                        metadata:
                          description: metadata as logo, moniker, etc.
                          type: object
                          properties:
                            commission:
                              type: string
                              title: >-
                                commission is the percentage of the rewards that
                                will

                                get transferred to the staker before the
                                remaining

                                rewards are split across all delegators
                            moniker:
                              type: string
                              title: |-
                                moniker is a human-readable name for displaying
                                the staker in the UI
                            website:
                              type: string
                              title: >-
                                website is a https-link to the website of the
                                staker
                            identity:
                              type: string
                              title: identity from keybase.io
                            security_contact:
                              type: string
                              description: security_contact ...
                            details:
                              type: string
                              description: details ...
                            pending_commission_change:
                              description: >-
                                pending_commission_change shows if the staker
                                plans

                                to change its commission. Delegators will see a
                                warning in

                                the UI. A Commission change takes some time
                                until

                                the commission is applied. Users have time to
                                redelegate

                                if they not agree with the new commission.
                              type: object
                              properties:
                                commission:
                                  type: string
                                  title: |-
                                    commission is the new commission that will
                                    become active once the change-time is over
                                creation_date:
                                  type: string
                                  format: int64
                                  description: >-
                                    creation_date is the UNIX-timestamp (in
                                    seconds)

                                    of when the entry was created.
                              title: >-
                                CommissionChangeEntry shows when the old
                                commission

                                of a staker will change to the new commission
                          title: >-
                            StakerMetadata contains static information for a
                            staker
                        self_delegation:
                          type: string
                          format: uint64
                          title: amount the staker has delegated to himself
                        self_delegation_unbonding:
                          type: string
                          format: uint64
                          description: >-
                            unbonding_amount is the amount the staker is
                            currently unbonding

                            from the self-delegation.

                            This amount can be larger than `amount` when the
                            staker

                            got slashed during unbonding. However, at the end of

                            the unbonding period this amount is double checked
                            with the

                            remaining amount.
                        total_delegation:
                          type: string
                          format: uint64
                          title: |-
                            total_delegation returns the sum of all $KYVE users
                            have delegated to this staker
                        delegator_count:
                          type: string
                          format: uint64
                          description: |-
                            delegator_count is the total number of individual
                            delegator addresses for that user.
                        pools:
                          type: array
                          items:
                            type: object
                            properties:
                              pool:
                                title: >-
                                  pool contains useful information about the
                                  pool
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uint64
                                    title: id is the ID of the pool
                                  name:
                                    type: string
                                    title: name of the pool
                                  runtime:
                                    type: string
                                    description: |-
                                      runtime for the protocol nodes
                                      like evm, bitcoin, etc.
                                  logo:
                                    type: string
                                    title: logo of the pool
                                  operating_cost:
                                    type: string
                                    format: uint64
                                    title: >-
                                      operating_cost is the base payout for each
                                      bundle reward
                                  upload_interval:
                                    type: string
                                    format: uint64
                                    title: >-
                                      upload_interval is the interval bundles
                                      get created
                                  total_funds:
                                    type: string
                                    format: uint64
                                    title: >-
                                      total_funds of the pool. If the pool runs

                                      out of funds no more bundles will be
                                      produced
                                  total_delegation:
                                    type: string
                                    format: uint64
                                    title: total_delegation of the pool
                                  status:
                                    description: |-
                                      status of the pool if pool is able
                                      to produce bundles, etc.
                                    type: string
                                    enum:
                                      - POOL_STATUS_UNSPECIFIED
                                      - POOL_STATUS_ACTIVE
                                      - POOL_STATUS_DISABLED
                                      - POOL_STATUS_NO_FUNDS
                                      - POOL_STATUS_NOT_ENOUGH_DELEGATION
                                      - POOL_STATUS_UPGRADING
                                    default: POOL_STATUS_UNSPECIFIED
                              points:
                                type: string
                                format: uint64
                                description: |-
                                  points indicates if the staker is inactive
                                  If the staker misses a vote, a point is added.
                                  After 5 points the staker is removed from
                                  the stakers set.
                              is_leaving:
                                type: boolean
                                title: >-
                                  is_leaving indicates if a user has scheduled a

                                  a PoolLeave entry. After the leave-time is
                                  over

                                  the staker will no longer participate in that
                                  pool
                              valaddress:
                                type: string
                                description: >-
                                  Valaddress is the address which is authorized
                                  to vote

                                  and submit bundles. If the server gets
                                  compromised

                                  the staker can just change the valaddress.
                              balance:
                                type: string
                                format: uint64
                                title: >-
                                  balance is the valaddress account balance and
                                  indicates

                                  whether or not the valaccount needs additional
                                  funds to

                                  pay for gas fees
                            title: |-
                              PoolMembership shows in which pool the staker
                              is participating
                          description: |-
                            pools is a list of all pools the staker is currently
                            participating, i.e. allowed to vote and upload data.
                      title: >-
                        FullStaker aggregates information from the staker and
                        its delegators

                        as well as pending queue entries into one object.

                        It contains almost all needed information for a
                        convenient usage
                      description: staker ...
                    valaccount:
                      description: valaccount ...
                      type: object
                      properties:
                        pool_id:
                          type: string
                          format: uint64
                          description: |-
                            pool_id defines the pool in which the address
                            is allowed to vote in.
                        staker:
                          type: string
                          description: staker is the address the valaccount is voting for.
                        valaddress:
                          type: string
                          title: |-
                            valaddress is the account stored on the protocol
                            node which votes for the staker in the given pool
                        points:
                          type: string
                          format: uint64
                          description: |-
                            When a node is inactive (does not vote at all)
                            A point is added, after a certain amount of points
                            is reached the node gets kicked out.
                        is_leaving:
                          type: boolean
                          description: >-
                            isLeaving indicates if a staker is leaving the given
                            pool.
                  description: StakerPoolResponse ...
                description: stakers ...
            description: >-
              QueryStakersByPoolResponse is the response type for the
              Query/Staker RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pool_id
          description: pool_id ...
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - QueryStakers
  /kyve/query/v1beta1/stakers_by_pool_count:
    get:
      summary: >-
        StakersByPool queries for all stakers and sorted them first by number of
        pools participating and

        then by delegation
      operationId: StakersByPoolCount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              stakers:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      title: address of the staker
                    metadata:
                      description: metadata as logo, moniker, etc.
                      type: object
                      properties:
                        commission:
                          type: string
                          title: >-
                            commission is the percentage of the rewards that
                            will

                            get transferred to the staker before the remaining

                            rewards are split across all delegators
                        moniker:
                          type: string
                          title: |-
                            moniker is a human-readable name for displaying
                            the staker in the UI
                        website:
                          type: string
                          title: website is a https-link to the website of the staker
                        identity:
                          type: string
                          title: identity from keybase.io
                        security_contact:
                          type: string
                          description: security_contact ...
                        details:
                          type: string
                          description: details ...
                        pending_commission_change:
                          description: >-
                            pending_commission_change shows if the staker plans

                            to change its commission. Delegators will see a
                            warning in

                            the UI. A Commission change takes some time until

                            the commission is applied. Users have time to
                            redelegate

                            if they not agree with the new commission.
                          type: object
                          properties:
                            commission:
                              type: string
                              title: |-
                                commission is the new commission that will
                                become active once the change-time is over
                            creation_date:
                              type: string
                              format: int64
                              description: |-
                                creation_date is the UNIX-timestamp (in seconds)
                                of when the entry was created.
                          title: |-
                            CommissionChangeEntry shows when the old commission
                            of a staker will change to the new commission
                      title: StakerMetadata contains static information for a staker
                    self_delegation:
                      type: string
                      format: uint64
                      title: amount the staker has delegated to himself
                    self_delegation_unbonding:
                      type: string
                      format: uint64
                      description: >-
                        unbonding_amount is the amount the staker is currently
                        unbonding

                        from the self-delegation.

                        This amount can be larger than `amount` when the staker

                        got slashed during unbonding. However, at the end of

                        the unbonding period this amount is double checked with
                        the

                        remaining amount.
                    total_delegation:
                      type: string
                      format: uint64
                      title: |-
                        total_delegation returns the sum of all $KYVE users
                        have delegated to this staker
                    delegator_count:
                      type: string
                      format: uint64
                      description: |-
                        delegator_count is the total number of individual
                        delegator addresses for that user.
                    pools:
                      type: array
                      items:
                        type: object
                        properties:
                          pool:
                            title: pool contains useful information about the pool
                            type: object
                            properties:
                              id:
                                type: string
                                format: uint64
                                title: id is the ID of the pool
                              name:
                                type: string
                                title: name of the pool
                              runtime:
                                type: string
                                description: |-
                                  runtime for the protocol nodes
                                  like evm, bitcoin, etc.
                              logo:
                                type: string
                                title: logo of the pool
                              operating_cost:
                                type: string
                                format: uint64
                                title: >-
                                  operating_cost is the base payout for each
                                  bundle reward
                              upload_interval:
                                type: string
                                format: uint64
                                title: >-
                                  upload_interval is the interval bundles get
                                  created
                              total_funds:
                                type: string
                                format: uint64
                                title: |-
                                  total_funds of the pool. If the pool runs
                                  out of funds no more bundles will be produced
                              total_delegation:
                                type: string
                                format: uint64
                                title: total_delegation of the pool
                              status:
                                description: |-
                                  status of the pool if pool is able
                                  to produce bundles, etc.
                                type: string
                                enum:
                                  - POOL_STATUS_UNSPECIFIED
                                  - POOL_STATUS_ACTIVE
                                  - POOL_STATUS_DISABLED
                                  - POOL_STATUS_NO_FUNDS
                                  - POOL_STATUS_NOT_ENOUGH_DELEGATION
                                  - POOL_STATUS_UPGRADING
                                default: POOL_STATUS_UNSPECIFIED
                          points:
                            type: string
                            format: uint64
                            description: |-
                              points indicates if the staker is inactive
                              If the staker misses a vote, a point is added.
                              After 5 points the staker is removed from
                              the stakers set.
                          is_leaving:
                            type: boolean
                            title: |-
                              is_leaving indicates if a user has scheduled a
                              a PoolLeave entry. After the leave-time is over
                              the staker will no longer participate in that pool
                          valaddress:
                            type: string
                            description: >-
                              Valaddress is the address which is authorized to
                              vote

                              and submit bundles. If the server gets compromised

                              the staker can just change the valaddress.
                          balance:
                            type: string
                            format: uint64
                            title: >-
                              balance is the valaddress account balance and
                              indicates

                              whether or not the valaccount needs additional
                              funds to

                              pay for gas fees
                        title: |-
                          PoolMembership shows in which pool the staker
                          is participating
                      description: |-
                        pools is a list of all pools the staker is currently
                        participating, i.e. allowed to vote and upload data.
                  title: >-
                    FullStaker aggregates information from the staker and its
                    delegators

                    as well as pending queue entries into one object.

                    It contains almost all needed information for a convenient
                    usage
                description: stakers ...
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: QueryStakersByPoolCountResponse ...
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }
                        // or ...
                        if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                          foo = any.unpack(Foo.getDefaultInstance());
                        }

                    Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                    Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".


                    JSON


                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - QueryStakers
  /kyve/stakers/v1beta1/params:
    get:
      summary: Parameters queries the parameters of the module.
      operationId: StakersParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  commission_change_time:
                    type: string
                    format: uint64
                    description: commission_change_time ...
                  leave_pool_time:
                    type: string
                    format: uint64
                    description: commission_change_time ...
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - QueryStakers
  /kyve/team/v1beta1/team_info:
    get:
      summary: TeamInfo queries all important information from the team module
      operationId: TeamInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              foundation_authority:
                type: string
                title: foundation is the authority foundation address
              bcp_authority:
                type: string
                title: bcp is the authority bcp address
              total_team_allocation:
                type: string
                format: uint64
                title: >-
                  total_team_allocation is the total allocation in $KYVE the
                  team module has in order to reward team members
              issued_team_allocation:
                type: string
                format: uint64
                title: >-
                  issued_team_allocation is the amount in $KYVE tied to team
                  vesting accounts and which are not available anymore
              available_team_allocation:
                type: string
                format: uint64
                title: >-
                  available_team_allocation is the amount in $KYVE with which
                  further team vesting accounts can be created.

                  if the available amount is zero no new vesting accounts can be
                  created
              total_authority_rewards:
                type: string
                format: uint64
                title: >-
                  total_authority_rewards is the amount in $KYVE the authority
                  has earned in total with inflation rewards.

                  Those rewards can be payed out for different purposes
              claimed_authority_rewards:
                type: string
                format: uint64
                title: >-
                  claimed_authority_rewards is the amount in $KYVE of how much
                  the authority already claimed
              available_authority_rewards:
                type: string
                format: uint64
                title: >-
                  available_authority_rewards is the amount in $KYVE of how much
                  rewards the authority can claim right now
              total_account_rewards:
                type: string
                format: uint64
                title: >-
                  total_account_rewards is the amount in $KYVE all team vesting
                  accounts have ever received
              claimed_account_rewards:
                type: string
                format: uint64
                title: >-
                  claimed_account_rewards is the amount in $KYVE all team
                  vesting accounts have ever claimed
              available_account_rewards:
                type: string
                format: uint64
                title: >-
                  available_account_rewards is the total amount of $KYVE all
                  team vesting accounts can currently claim
              required_module_balance:
                type: string
                format: uint64
                title: >-
                  required_module_balance is the balance the team module should
                  have. If this is less than the module balance

                  something went wrong
              team_module_balance:
                type: string
                format: uint64
                title: team_module_balance is the team module balance in $KYVE
            description: >-
              QueryAccountsResponse is response type for the Query/TeamInfo RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - QueryTeam
  /kyve/team/v1beta1/team_vesting_account/{id}:
    get:
      summary: TeamVestingAccount queries the team vesting accounts of the module.
      operationId: TeamVestingAccount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                title: account holds the requested team vesting account
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    description: >-
                      id is a unique identify for each vesting account, tied to
                      a single team member.
                  total_allocation:
                    type: string
                    format: uint64
                    description: >-
                      total_allocation is the number of tokens reserved for this
                      team member.
                  commencement:
                    type: string
                    format: uint64
                    title: >-
                      commencement is the unix timestamp of the member's
                      official start date in seconds
                  clawback:
                    type: string
                    format: uint64
                    title: >-
                      clawback is a unix timestamp of a clawback in seconds. If
                      timestamp is zero

                      it means that the account has not received a clawback
                  unlocked_claimed:
                    type: string
                    format: uint64
                    title: >-
                      unlocked_claimed is the amount of $KYVE already claimed by
                      the account holder
                  last_claimed_time:
                    type: string
                    format: uint64
                    title: the last time the unlocked amount was claimed
                  total_rewards:
                    type: string
                    format: uint64
                    title: >-
                      total rewards is the total amount of rewards the account
                      has received ever
                  rewards_claimed:
                    type: string
                    format: uint64
                    title: >-
                      rewards claimed is the amount inflation rewards claimed by
                      account holder
                description: TeamVestingAccount ...
            description: >-
              QueryTeamVestingAccountResponse is the response type for the
              Query/TeamVestingAccount RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          description: >-
            id is a unique identify for each vesting account, tied to a single
            team member.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - QueryTeam
  /kyve/team/v1beta1/team_vesting_accounts:
    get:
      summary: TeamVestingAccounts queries all team vesting accounts of the module.
      operationId: TeamVestingAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                      description: >-
                        id is a unique identify for each vesting account, tied
                        to a single team member.
                    total_allocation:
                      type: string
                      format: uint64
                      description: >-
                        total_allocation is the number of tokens reserved for
                        this team member.
                    commencement:
                      type: string
                      format: uint64
                      title: >-
                        commencement is the unix timestamp of the member's
                        official start date in seconds
                    clawback:
                      type: string
                      format: uint64
                      title: >-
                        clawback is a unix timestamp of a clawback in seconds.
                        If timestamp is zero

                        it means that the account has not received a clawback
                    unlocked_claimed:
                      type: string
                      format: uint64
                      title: >-
                        unlocked_claimed is the amount of $KYVE already claimed
                        by the account holder
                    last_claimed_time:
                      type: string
                      format: uint64
                      title: the last time the unlocked amount was claimed
                    total_rewards:
                      type: string
                      format: uint64
                      title: >-
                        total rewards is the total amount of rewards the account
                        has received ever
                    rewards_claimed:
                      type: string
                      format: uint64
                      title: >-
                        rewards claimed is the amount inflation rewards claimed
                        by account holder
                  description: TeamVestingAccount ...
                description: accounts holds all the team vesting accounts of this module.
            description: >-
              QueryAccountsResponse is response type for the
              Query/TeamVestingAccounts RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - QueryTeam
  /kyve/team/v1beta1/team_vesting_status/{id}:
    get:
      summary: >-
        TeamCurrentVestingStatus queries the current vesting progress of a team
        vesting account
      operationId: TeamVestingStatus
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              request_date:
                type: string
                description: request_date ..
              plan:
                description: plan ...
                type: object
                properties:
                  commencement:
                    type: string
                    description: commencement ...
                  token_vesting_start:
                    type: string
                    description: token_vesting_start ...
                  token_vesting_finished:
                    type: string
                    description: token_vesting_finished ...
                  token_unlock_start:
                    type: string
                    description: token_unlock_start ...
                  token_unlock_finished:
                    type: string
                    description: token_unlock_finished ...
                  clawback:
                    type: string
                    format: uint64
                    description: clawback ...
                  clawback_amount:
                    type: string
                    format: uint64
                    description: clawback_amount ...
                  maximum_vesting_amount:
                    type: string
                    format: uint64
                    description: maximum_vesting_amount ...
                title: >-
                  QueryVestingPlan is a type holding information about the
                  account's vesting data which does not change
              status:
                description: status ..
                type: object
                properties:
                  total_vested_amount:
                    type: string
                    format: uint64
                    description: total_vested_amount ...
                  total_unlocked_amount:
                    type: string
                    format: uint64
                    description: total_unlocked_amount ...
                  current_claimable_amount:
                    type: string
                    format: uint64
                    description: current_claimable_amount ...
                  locked_vested_amount:
                    type: string
                    format: uint64
                    description: locked_vested_amount ...
                  remaining_unvested_amount:
                    type: string
                    format: uint64
                    description: remaining_unvested_amount ...
                  claimed_amount:
                    type: string
                    format: uint64
                    description: claimed_amount ...
                  total_rewards:
                    type: string
                    format: uint64
                    description: total_rewards ...
                  claimed_rewards:
                    type: string
                    format: uint64
                    description: claimed_rewards ...
                  available_rewards:
                    type: string
                    format: uint64
                    description: available_rewards ...
                title: >-
                  QueryVestingStatus is a type holding information about the
                  account's vesting progress
            description: >-
              QueryTeamCurrentVestingStatusResponse is the response type for the
              Query/TeamCurrentVestingStatus RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          description: >-
            id is a unique identify for each vesting account, tied to a single
            team member.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - QueryTeam
  /kyve/team/v1beta1/team_vesting_status_by_time/{id}/{time}:
    get:
      summary: >-
        TeamCurrentVestingStatus queries the current vesting progress of a team
        vesting account
      operationId: TeamVestingStatusByTime
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              request_date:
                type: string
                description: request_date ..
              plan:
                description: plan ...
                type: object
                properties:
                  commencement:
                    type: string
                    description: commencement ...
                  token_vesting_start:
                    type: string
                    description: token_vesting_start ...
                  token_vesting_finished:
                    type: string
                    description: token_vesting_finished ...
                  token_unlock_start:
                    type: string
                    description: token_unlock_start ...
                  token_unlock_finished:
                    type: string
                    description: token_unlock_finished ...
                  clawback:
                    type: string
                    format: uint64
                    description: clawback ...
                  clawback_amount:
                    type: string
                    format: uint64
                    description: clawback_amount ...
                  maximum_vesting_amount:
                    type: string
                    format: uint64
                    description: maximum_vesting_amount ...
                title: >-
                  QueryVestingPlan is a type holding information about the
                  account's vesting data which does not change
              status:
                description: status ..
                type: object
                properties:
                  total_vested_amount:
                    type: string
                    format: uint64
                    description: total_vested_amount ...
                  total_unlocked_amount:
                    type: string
                    format: uint64
                    description: total_unlocked_amount ...
                  current_claimable_amount:
                    type: string
                    format: uint64
                    description: current_claimable_amount ...
                  locked_vested_amount:
                    type: string
                    format: uint64
                    description: locked_vested_amount ...
                  remaining_unvested_amount:
                    type: string
                    format: uint64
                    description: remaining_unvested_amount ...
                  claimed_amount:
                    type: string
                    format: uint64
                    description: claimed_amount ...
                  total_rewards:
                    type: string
                    format: uint64
                    description: total_rewards ...
                  claimed_rewards:
                    type: string
                    format: uint64
                    description: claimed_rewards ...
                  available_rewards:
                    type: string
                    format: uint64
                    description: available_rewards ...
                title: >-
                  QueryVestingStatus is a type holding information about the
                  account's vesting progress
            description: >-
              QueryTeamVestingStatusByTimeResponse is the response type for the
              Query/TeamCurrentVestingByTimeStatus RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: id
          description: >-
            id is a unique identify for each vesting account, tied to a single
            team member.
          in: path
          required: true
          type: string
          format: uint64
        - name: time
          description: >-
            time is a unix timestamp of the time the vesting progress should be
            calculated
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - QueryTeam
